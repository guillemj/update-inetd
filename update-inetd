#!/usr/bin/perl
#
# update-inetd: a utility to add entries to the /etc/inetd.conf file
#
# Copyright © 1995 Peter Tobias <tobias@et-inf.fho-emden.de>
# Copyright © 2009-2012  Serafeim Zanikolas <sez@debian.org>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.

use 5.000;
use strict;
use warnings;

use DebianNet ();

$| = 1;

$0 =~ s{.*/}{};
my $version = '1.12';
my $debug;
my $mode;
my $modearg;
my $pattern;
my $group;

while ($ARGV[0] =~ m/^-/) {
    $_ = shift @ARGV;
    if (/--help$/) {
        usage();
    } elsif (/--version$/) {
        version();
    } elsif (/--add$/) {
        $mode = 'add';
    } elsif (/--remove$/) {
        $mode = 'remove';
    } elsif (/--enable$/) {
        $mode = 'enable';
    } elsif (/--disable$/) {
        $mode = 'disable';
    } elsif (/--multi$/) {
        $DebianNet::MULTI = 'true';
    } elsif (/--verbose$/) {
        $DebianNet::VERBOSE = 'true';
    } elsif (/--debug$/) {
        $debug = 'true';
    } elsif (/--file$/) {
        my $file = shift @ARGV;
        die "$0: Option '--file' requires an argument\n"
            if not $file or $file =~ m/^--/;
        $DebianNet::INETD_CONF = $file;
    } elsif (/--group$/) {
        $group = shift @ARGV;
        die "$0: Option '--group' requires an argument\n"
            if not $group or $group =~ m/^--/;
    } elsif (/--comment-chars$/) {
        my $sep = shift @ARGV;
        die "$0: Option '--comment-chars' requires an argument\n" unless $sep;
        die "$0: The comment characters do not start with a '#'!\n" unless $sep =~ /^#/;
        $DebianNet::SEP = $sep;
    } elsif (/--pattern$/) {
        $pattern = shift @ARGV;
        die "$0: Option '--pattern' requires an argument\n"
            if not $pattern or $pattern =~ m/^--/;
    } else {
        warn "$0: Unknown option: $_\n";
        warn "Try '$0 --help' for more information.\n";
        exit 1;
    }
}

$group = 'OTHER' unless $group;

usage() unless $mode;

# die "You must be root to run this script.\n" if ($> != 0);

if ($#ARGV > 0) {
    warn "Too many arguments!\n";
} elsif ($#ARGV == -1) {
    warn "Too few arguments!\n";
} else {
    $modearg = $ARGV[0];
    die "The service name may not include a whitespace character!\n" if ($mode eq 'enable' or $mode eq 'disable') and ($modearg =~ /\s+|\\t/);
    die "The entry definition does not contain any whitespace characters!\n" if $mode eq 'add' and not ($modearg =~ /\s+|\\t/);
}

warn "Processing $DebianNet::INETD_CONF\n" if defined $DebianNet::VERBOSE;
warn "Using mode \"$mode\", group \"$group\", pattern \"$pattern\" and seperator \"$DebianNet::SEP\"\n" if defined $debug;
warn "Multiple remove/disable: $DebianNet::MULTI\n" if defined $debug and defined $DebianNet::MULTI;
warn "ARGUMENT: $modearg\n" if defined $debug;

if ($mode eq 'add') {
    DebianNet::add_service($modearg, $group);
} elsif ($mode eq 'remove') {
    DebianNet::remove_service($modearg, $pattern);
} elsif ($mode eq 'enable') {
    my @arglst = split /,/, $modearg;
    while(@arglst) {
        $_ = shift @arglst;
        DebianNet::enable_service($_, $pattern);
    }
} elsif ($mode eq 'disable') {
    my @arglst = split /,/, $modearg;
    while(@arglst) {
        $_ = shift @arglst;
        DebianNet::disable_service($_, $pattern);
    }
} else {
    die "Mode = '$modearg'? This should not happen!\n";
}

sub version {
    warn "$0 $version\n";
    warn "DebianNet module $DebianNet::VERSION\n";
    exit 0;
}

sub usage {
    warn <<"EOF";
Usage: $0 [OPTION] MODE ARGUMENT

Options:
  --version                       output version information and exit
  --help                          display this help and exit
  --verbose                       explain what is being done
  --debug                         enables debugging mode
  --multi                         allow multiple removes/disables
  --file FILENAME                 use FILENAME instead of /etc/inetd.conf
  --group GROUPNAME               add entry to section GROUPNAME
  --comment-chars CHARACTERS      use CHARACTERS as comment characters
  --pattern PATTERN               use PATTERN to select a service

Modes:
  --add ENTRY                     add ENTRY to $DebianNet::INETD_CONF
  --remove ENTRY                  remove ENTRY (regular expression)
  --enable SERVICE                enable SERVICE in $DebianNet::INETD_CONF
  --disable SERVICE               disable SERVICE in $DebianNet::INETD_CONF

In order to prevent the shell from changing your ENTRY definition
you have to quote the ENTRY using single or double quotes. You can
use tabs (the tab character or \\t) and spaces to separate the fields
of the ENTRY. If you want to enable/disable more than one SERVICE you
can use a comma separated list of services (no whitespace characters
allowed).

Note: users must use --comment-chars '#' to disable a service for that setting
to survive upgrades. Package maintainer scripts should use the default
--comment-chars. See update-inetd(8) for details.

EOF
    exit 0;
}

